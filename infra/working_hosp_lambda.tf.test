resource "aws_iam_role" "iam_for_lambda" {
  name = "${local.name_prefix}iam_for_lambda"

  assume_role_policy = <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Action": "sts:AssumeRole",
      "Principal": {
        "Service": "lambda.amazonaws.com"
      },
      "Effect": "Allow",
      "Sid": ""
    }
  ]
}
EOF
}

resource "aws_lambda_permission" "allow_bucket_hospitals" {
  statement_id  = "AllowExecutionFromS3Bucket"
  action        = "lambda:InvokeFunction"
  function_name = aws_lambda_function.transform_hospitals_data_lambda.arn
  principal     = "s3.amazonaws.com"
  source_arn    = aws_s3_bucket.data-dump-bucket.arn
}

resource "aws_lambda_function" "transform_hospitals_data_lambda" {
#  filename      = "../python_scripts/script_transform.zip"
  s3_bucket = aws_s3_bucket.resources-bucket.bucket
  s3_key  = aws_s3_bucket_object.python_transform_hospitals_script.key
  function_name = "${local.name_prefix}lambda_transform_hospitals_data"
  role          = aws_iam_role.iam_for_lambda.arn
  handler       = "script_transform_hospitals.lambda_handler"
  #the layer seems to load but does not work
  layers        = [aws_lambda_layer_version.lambda_layer.arn,"arn:aws:lambda:us-west-2:420165488524:layer:AWSLambda-Python37-SciPy1x:20"]
  runtime = "python3.7"
}

resource "aws_s3_bucket" "data-dump-bucket" {
  bucket = "${local.name_prefix}data-dump-bucket"
  server_side_encryption_configuration {
    rule {
      apply_server_side_encryption_by_default {
        kms_master_key_id = aws_kms_key.capstone_key.arn
        sse_algorithm     = "aws:kms"
      }
    }
  }
}

resource "aws_s3_bucket_notification" "bucket_notification_hospitals" {
  bucket = aws_s3_bucket.data-dump-bucket.id

  lambda_function {
    lambda_function_arn = aws_lambda_function.transform_hospitals_data_lambda.arn
    events              = ["s3:ObjectCreated:*"]
    filter_prefix       = "raw-zone/hospitals-data-"
    filter_suffix       = ".json"
  }

  depends_on = [aws_lambda_permission.allow_bucket_hospitals]
}